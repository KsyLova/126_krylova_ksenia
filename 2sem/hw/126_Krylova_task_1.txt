DoubleLinkedList.java|11|dummy==dummy -> dummy==dummy.getNext()|isEmptyWithNotEmptyListShouldReturnFalse()
DoubleLinkedList.java|17|return dummy.getPrev() -> return dummy.getNext()|getHeadGetTail_PushTwoElements_HeadAndTailIsCorrect()
DoubleLinkedList.java|20|return dummy.getNext() -> return dummy.getPrev()|getHeadGetTail_PushTwoElements_HeadAndTailIsCorrect()
DoubleLinkedList.java|24|index >size -> index >=size|get_PushElementWithIndexEqualsSize_Exception()
DoubleLinkedList.java|28| cur.getPrev()-> cur.getNext()|get_PushTwoElements_TheSecondElementIsCorrect()
DoubleLinkedList.java|37| --size-> ++size|get_PushTwoElements_TheSecondElementIsCorrect()
DoubleLinkedList.java|41| insertBefore(getTail(), data)-> insertBefore(getHead(), data)|pushFront_pushTwoElements_HeadAndTailIsCorrect()
DoubleLinkedList.java|44| insertBefore(getHead(), data)-> insertBefore(getTail(), data)|pushFront_pushTwoElements_HeadAndTailIsCorrect()
DoubleLinkedList.java|47| node.getPrev().setPrev(node.getNext());" -> "node.getPrev().setNext(node.getNext())|remove_RemoveElementFromList_ConnectionNextAndPrevCorrect()
DoubleLinkedList.java|48| node.getNext().setNext(node.getPrev());" -> "node.getNext().setPrev(node.getPrev())|remove_RemoveElementFromList_ConnectionNextAndPrevCorrect()
DoubleLinkedList.java|55|"list.getHead().setNext(node);" -> "list.getHead().setPrev(node);"|insertListBefore_insertListBeforeSecondElement_SequenceIsCorrect()
DoubleLinkedList.java|56|"list.getTail().setPrev(node.getNext());" -> "list.getTail().setNext(node.getNext());"|insertListBefore_insertListBeforeSecondElement_SequenceIsCorrect()
DoubleLinkedList.java|63|"" -> "size+=list.getSize();"|insertListBefore_insertListBeforeSecondElement_SequenceIsCorrect() #чтобы избежать выхода за границы, нужно добавить элементы,вставленных к размеру.
DoubleLinkedList.java|68|list.getHead().setNext(node.getPrev()); -> list.getHead().setPrev(node.getPrev());|insertListBefore_insertListBeforeSecondElem_SequenceIsCorrect()
DoubleLinkedList.java|69|list.getTail().setPrev(node); -> list.getTail().setNext(node);|insertListBefore_insertListBeforeSecondElem_SequenceIsCorrect()
DoubleLinkedList.java|76| -> size+=list.getSize();|insertListBefore_insertListBeforeSecondElem_SequenceIsCorrect() #чтобы избежать выхода за границы, нужно добавить элементы,вставленных к размеру.






DynamicArray.java|11|"size = 1;" -> "size = 0;"|getSize_getSizeOfEmptyArray_SizeEqualsDefault()
DynamicArray.java|15|"data = new Object[capacity];" -> "data = new Object[size];"|createArray_CreateArrayWithSize_SizeIsCorrect()
DynamicArray.java|21|"if(newSize > 0)" -> "if(newSize < 0)"|resize_setNewSize_NewSizeIsCorrect()
DynamicArray.java|27|"newSize = size;" -> "size = newSize;"|resize_setNewSize_NewSizeIsCorrect()
DynamicArray.java|30|"if(index < 0 || index > size)" -> "if(index < 0 || index >= size)"|get_getElementWithIndexEqualsSize_ThrowsException()
DynamicArray.java|35|"if(index < 0 || index > size)" -> "if(index < 0 || index >= size)"|set_setElementWithIndexEqualsSize_ThrowsException()
DynamicArray.java|40|"if(index < 0 || index > size)" -> "if(index < 0 || index >= size)"|insert_insertElementWithIndexEqualsSize_ThrowsException()
DynamicArray.java|42|"if(capacity < size) {" -> "if(capacity <= size) {"|insert_InsertElements_ElementsAreCorrect()
DynamicArray.java|49|"data[size] = value;" -> "data[index] = value;"|insert_insertElementToTheSecondPosition_ElemIsCorrect()
DynamicArray.java|52|"if(capacity < size) {" -> "if(capacity <= size) {"| pushBack_pushBackElements_ElementsAreCorrect(){
DynamicArray.java|56|"data[capacity] = value;" -> "data[size] = value;"| pushBack_pushBackElements_ElementsAreCorrect(){
DynamicArray.java|60|"if(size < 0)" -> "if(size <= 0)"|popBack_popBackElementFromEmptyArray_ThrowsException()
DynamicArray.java|66|"if(index < 0 || index > size)" -> "if(index < 0 || index >= size)"|remove_removeIndexOutOfBounds_ThrowsException()